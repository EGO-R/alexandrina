/*
 * This file is generated by jOOQ.
 */
package org.mirea.backend.jooq.generated.tables.records;


import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.mirea.backend.jooq.generated.tables.AuthProviders;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class AuthProvidersRecord extends UpdatableRecordImpl<AuthProvidersRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.auth_providers.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.auth_providers.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.auth_providers.user_id</code>.
     */
    public void setUserId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.auth_providers.user_id</code>.
     */
    public Long getUserId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.auth_providers.provider_type</code>.
     */
    public void setProviderType(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.auth_providers.provider_type</code>.
     */
    public Integer getProviderType() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.auth_providers.provider_user_id</code>.
     */
    public void setProviderUserId(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.auth_providers.provider_user_id</code>.
     */
    public Long getProviderUserId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>public.auth_providers.credentials</code>.
     */
    public void setCredentials(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.auth_providers.credentials</code>.
     */
    public String getCredentials() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AuthProvidersRecord
     */
    public AuthProvidersRecord() {
        super(AuthProviders.AUTH_PROVIDERS);
    }

    /**
     * Create a detached, initialised AuthProvidersRecord
     */
    public AuthProvidersRecord(Long id, Long userId, Integer providerType, Long providerUserId, String credentials) {
        super(AuthProviders.AUTH_PROVIDERS);

        setId(id);
        setUserId(userId);
        setProviderType(providerType);
        setProviderUserId(providerUserId);
        setCredentials(credentials);
        resetChangedOnNotNull();
    }
}
