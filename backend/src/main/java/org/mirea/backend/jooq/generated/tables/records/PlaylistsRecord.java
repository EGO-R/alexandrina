/*
 * This file is generated by jOOQ.
 */
package org.mirea.backend.jooq.generated.tables.records;


import java.time.OffsetDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.mirea.backend.jooq.generated.tables.Playlists;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PlaylistsRecord extends UpdatableRecordImpl<PlaylistsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.playlists.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.playlists.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.playlists.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.playlists.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.playlists.privacy_type</code>.
     */
    public void setPrivacyType(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.playlists.privacy_type</code>.
     */
    public Integer getPrivacyType() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.playlists.user_id</code>.
     */
    public void setUserId(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.playlists.user_id</code>.
     */
    public Long getUserId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>public.playlists.created_at</code>.
     */
    public void setCreatedAt(OffsetDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.playlists.created_at</code>.
     */
    public OffsetDateTime getCreatedAt() {
        return (OffsetDateTime) get(4);
    }

    /**
     * Setter for <code>public.playlists.updated_at</code>.
     */
    public void setUpdatedAt(OffsetDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.playlists.updated_at</code>.
     */
    public OffsetDateTime getUpdatedAt() {
        return (OffsetDateTime) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PlaylistsRecord
     */
    public PlaylistsRecord() {
        super(Playlists.PLAYLISTS);
    }

    /**
     * Create a detached, initialised PlaylistsRecord
     */
    public PlaylistsRecord(Long id, String name, Integer privacyType, Long userId, OffsetDateTime createdAt, OffsetDateTime updatedAt) {
        super(Playlists.PLAYLISTS);

        setId(id);
        setName(name);
        setPrivacyType(privacyType);
        setUserId(userId);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        resetChangedOnNotNull();
    }
}
